services:
  hk_db:
    container_name: hakaton_2025_db
    image: postgres:latest
    restart: always
    hostname: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data

  hk_migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hakaton_2025_migrate
    env_file:
      - .env
    command: sh -c "python manage.py migrate"
    volumes:
      - ./backend:/home/backend
    depends_on:
      hk_db:
        condition: service_started

  hk_create_superuser:
    container_name: hakaton_2025_create_superuser
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "python manage.py create_default_superuser"
    env_file:
      - .env
    volumes:
      - ./backend:/home/backend
    depends_on:
      hk_migrate:
        condition: service_completed_successfully

  hk_backend:
    container_name: hakaton_2025_back
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "python manage.py runserver 0.0.0.0:8001"
    volumes:
      - ./backend:/home/backend
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      hk_db:
        condition: service_started
      hk_redis:
        condition: service_started
      hk_create_superuser:
        condition: service_completed_successfully

  hk_ai:
    container_name: hakaton_2025_ai
    build:
      context: ./ai
      dockerfile: Dockerfile
    volumes:
      - ./backend/media:/home/backend/media  # Общий том для доступа к файлам
    ports:
      - "8002:8000"

  hk_redis:
    container_name: hakaton_2025_redis
    image: redis:alpine
    restart: always

  hk_celery_worker:
    container_name: hakaton_2025_celery_worker
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "celery -A src worker -l info --concurrency=1"
    volumes:
      - ./backend:/home/backend
    env_file:
      - .env
    depends_on:
      hk_db:
        condition: service_started
      hk_migrate:
        condition: service_completed_successfully
      hk_redis:
        condition: service_started

  hk_frontend:
    container_name: hakaton_2025_front
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: sh -c "npm install && npm run dev"
    volumes:
      - ./frontend:/home/frontend
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      hk_backend:
        condition: service_started